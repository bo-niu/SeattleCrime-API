scalar GraphQLDate


type Crime {
  OffenseType: String
  OffenseDescription: String
  ReportDate: GraphQLDate
  OffenseStartDate: GraphQLDate
  OffenseEndDate: GraphQLDate
  Block: String
  CensusTract: String
  Longitude: Float
  Latitude: Float
}

enum CrimeType {
  Assault
  Bias Incident
  Disorderly Conduct
  DUI
  Burglary
  Homicide
  Injury
  Liquor Violation
  Narcotics
  Pickpocket
  Robbery
}

enum CrimeDistrict {
  B
  C
  D
  E
  F
  G
  J
  K
  L
  M
  N
  O
  Q
  R
  S
  U
  W
}

enum StatusType {
  New
  Assigned
  Fixed
  Closed
}

type User {
  signedIn: Boolean!
  givenName: String
  name: String
  email: String
}

"Input for the Home page's Filter"
input FilterInput {
  startDate: GraphQLDate
  endDate: GraphQLDate
  district: String
  beat: String
}

"Input for the Report page's Filter"
input ReportInput {
  startDate: GraphQLDate
  endDate: GraphQLDate
  offensetype: String
  district: String
}

#### Top level declarations

type Query {
  about: String!
  user: User!
  filtrateCrimes(input: FilterInput): [Crime]
  crimeCount(input: FilterInput): Int!
  reportFilter(input: ReportInput): [Crime]
}
