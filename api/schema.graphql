scalar GraphQLDate

<<<<<<< HEAD
type Crime {
  OffenseType: String
  OffenseDescription: String
  ReportDate: GraphQLDate
  OffenseStartDate: GraphQLDate
  OffenseEndDate: GraphQLDate
  Block: String
  CensusTract: String
  Longitude: Float
  Latitude: Float
=======
enum CrimeYear {
  2011
  2012
  2013
  2014
  2015
  2016
}

enum CrimeType {
  Assault
  Bias Incident
  Disorderly Conduct
  DUI
  Burglary
  Homicide
  Injury
  Liquor Violation
  Narcotics
  Pickpocket
  Robbery
}

enum CrimePrecinct {
  B
  C
  D
  E
  F
  G
  J
  K
  L
  M
  N
  O
  Q
  R
  S
  U
  W
}

enum StatusType {
  New
  Assigned
  Fixed
  Closed
}

type Issue {
  _id: ID!
  id: Int!
  title: String!
  status: StatusType!
  owner: String
  effort: Int
  created: GraphQLDate!
  due: GraphQLDate
  description: String
}

type IssueCounts {
  owner: String!
  New: Int
  Assigned: Int
  Fixed: Int
  Closed: Int
}

type IssueListWithPages {
  issues: [Issue!]!
  pages: Int
>>>>>>> 30a5733b5dda88fe7e9ba2ad075738ec5844e430
}

type User {
  signedIn: Boolean!
  givenName: String
  name: String
  email: String
}

"Input for the Home page's Filter"
input FilterInput {
  startDate: GraphQLDate
  endDate: GraphQLDate
  district: String
  beat: String
}

#### Top level declarations

type Query {
  about: String!
  user: User!
  filtrateCrimes(input: FilterInput): [Crime]
}
<<<<<<< HEAD
=======

type Mutation {
  setAboutMessage(message: String!): String
  issueAdd(issue: IssueInputs!): Issue!
  issueUpdate(id: Int!, changes: IssueUpdateInputs!): Issue!
  issueDelete(id: Int!): Boolean!
  issueRestore(id: Int!): Boolean!
}
>>>>>>> 30a5733b5dda88fe7e9ba2ad075738ec5844e430
